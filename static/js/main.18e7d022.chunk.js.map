{"version":3,"sources":["components/login/login.component.jsx","Router.js","App.js","serviceWorker.js","reducers/counter.js","reducers/isLogged.js","reducers/index.js","index.js"],"names":["Login","props","answer","React","createRef","name","velocidad","incrementNumber","e","cantidadDeNumeros","state","numerosCant","setState","decrementNumber","alert","randomNumber","lista","characters","letras","letrasMay","numeros","charactersLength","length","i","push","charAt","Math","floor","random","num","numerosCantActual","ver","start","timeOut","puntuacion","mal","bien","time","setInterval","timer","setTimeout","marckRecord","clearTimeout","identity","record","localStorage","setItem","JSON","stringify","signIn","preventDefault","stop","abs","res","current","value","join","algorithm","changeSpeedAlgorithm","round","clear","aumentarVelocidad","velocidadRef","isNaN","nuevaVelocidad","logIn","user","alias","palabras","dias","parse","getItem","changeSpeed","handleInputChange","bind","event","target","checked","this","answerRes","speed","console","log","Fragment","onClick","htmlFor","type","onChange","onSubmit","ref","placeholder","Component","customHistory","createBrowserHistory","Router","basename","history","exact","path","component","App","useSelector","counter","useDispatch","className","Boolean","window","location","hostname","match","counterReducer","action","loggedReducer","allReducers","combineReducers","isLogged","store","createStore","allReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.18e7d022.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n//import { NavLink, Redirect } from \"react-router-dom\";\n//import \"./login.style.sass\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    let user = JSON.parse(localStorage.getItem(\"identity\"));\n\n    this.state = {\n      num: null,\n      numerosCant: 2,\n      numerosCantActual: 2,\n      bien: 0,\n      mal: 0,\n      puntuacion: 0,\n      identity: user,\n      ver: true,\n      clear: false,\n      start: false,\n      stop: 0,\n      letrasMay: true,\n      letras: true,\n      numeros: true,\n      changeSpeed: 0,\n      algorithm: true,\n      time: 90\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this)\n  }\n\n  answer = React.createRef();\n  name = React.createRef();\n  velocidad = React.createRef();\n\n  handleInputChange(event) {\n    const target = event.target;\n    const name = target.name;\n    var value;\n    if (name === 'letras') value = target.checked;\n    else if (name === 'numeros') value = target.checked;\n    else if (name === 'letrasMay') value = target.checked;\n    else if (name === 'algorithm') value = target.checked;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  incrementNumber = (e) => {\n    var cantidadDeNumeros = this.state.numerosCant;\n    this.setState({\n      numerosCant: cantidadDeNumeros + 1\n    })\n  }\n\n  decrementNumber = (e) => {\n    var cantidadDeNumeros = this.state.numerosCant;\n    if (cantidadDeNumeros === 2) return alert('demasiado');\n    this.setState({\n      numerosCant: cantidadDeNumeros - 1\n    })\n  }\n\n  randomNumber = () => {\n    var lista = []\n    var letras = 'abcdefghijklmnopqrstuvwxyz';\n    var letrasMay = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    var numeros = '0123456789';\n\n    var characters = ''\n\n    if (this.state.letras) characters += letras;\n    if (this.state.letrasMay) characters += letrasMay;\n    if (this.state.numeros) characters += numeros;\n\n    var charactersLength = characters.length;\n    for (var i = 0; i < this.state.numerosCant; i++) {\n      lista.push(characters.charAt(Math.floor(Math.random() * charactersLength)));\n    }\n\n\n    this.setState({\n      num: lista,\n      numerosCantActual: this.state.numerosCant,\n      ver: true\n    });\n\n  }\n\n  start = (e) => {\n    this.randomNumber();\n    this.timeOut();\n    this.setState({\n      puntuacion: 0,\n      mal: 0,\n      bien: 0,\n      start: true\n    })\n  }\n\n  timeOut = (e) => {\n    const time = setInterval(() => {\n      this.setState({\n        time: this.state.time - 1\n      })\n    }, 1000);\n    const timer = setTimeout(() => {\n      this.marckRecord()\n      clearTimeout(time)\n      this.setState({\n        time: 90\n      })\n    }, 90000);\n\n    return () => clearTimeout(timer);\n  }\n\n  marckRecord = (e) => {\n    this.setState({\n      start: false\n    })\n    if (this.state.puntuacion > this.state.identity.record) {\n      this.state.identity.record = this.state.puntuacion;\n      localStorage.setItem('identity', JSON.stringify(this.state.identity))\n    }\n  }\n\n  signIn = (e) => {\n    e.preventDefault();\n\n    var stop = this.state.bien + Math.abs(this.state.mal);\n    this.setState({\n      stop: stop\n    })\n    const timerVal = setTimeout(() => {\n      if (stop === this.state.stop) this.setState({ ver: false })\n    }, this.state.identity.velocidad);\n\n    var res = this.answer.current.value\n    this.answer.current.value = null;\n    if (res === this.state.num.join('')) {\n      if (this.state.algorithm) this.changeSpeedAlgorithm(\"WELL\");\n\n      var value = (this.state.puntuacion + (this.state.numerosCantActual * 10) / (this.state.identity.velocidad / 1000))\n      value = Math.round(value);\n      this.setState({\n        bien: this.state.bien + 1,\n        puntuacion: value,\n        clear: true\n      });\n    }\n    else {\n      if (this.state.algorithm) this.changeSpeedAlgorithm(\"BAD\");\n\n      this.setState({\n        mal: this.state.mal + 1,\n        clear: true\n      });\n    }\n\n    this.randomNumber();\n  }\n\n  aumentarVelocidad = (e) => {\n    e.preventDefault();\n    var velocidadRef = this.velocidad.current.value\n    if (isNaN(velocidadRef)) return alert('Ingrese solo numeros')\n    if (velocidadRef === 0) return alert('Ingrese un numero mayor a 0')\n    let nuevaVelocidad = (velocidadRef * 1000);\n    this.state.identity.velocidad = nuevaVelocidad;\n    this.setState({\n      identity: this.state.identity\n    })\n    localStorage.setItem('identity', JSON.stringify(this.state.identity));\n  }\n\n  logIn = (e) => {\n    e.preventDefault();\n    let user = {\n      alias: this.name.current.value,\n      velocidad: 1000,\n      bien: 0,\n      mal: 0,\n      numeros: 0,\n      palabras: 0,\n      letras: 0,\n      dias: 0,\n      record: 0\n    }\n    localStorage.setItem('identity', JSON.stringify(user));\n    this.setState({\n      identity: user\n    })\n  }\n\n  changeSpeedAlgorithm(answerRes) {\n    var speed = this.state.changeSpeed\n    var numerosCant = this.state.numerosCant\n    console.log(numerosCant)\n    if (answerRes === 'WELL') {\n      this.setState({\n        changeSpeed: speed + 1\n      })\n    }\n    if (answerRes === 'BAD') this.setState({\n      changeSpeed: speed - 1\n    })\n\n    if (speed === 2) {\n      this.setState({\n        numerosCant: numerosCant + 1\n      })\n    }\n    if (numerosCant > 2 && speed === -2) {\n      this.setState({\n        numerosCant: numerosCant - 1\n      })\n    }\n\n    if (speed === 2 || speed === -2) {\n      this.setState({\n        changeSpeed: 0\n      })\n    }\n\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.identity ?\n          <div>\n            {this.state.identity &&\n              <p>Record: {this.state.identity.record}</p>\n            }\n            <p>Velocidad: {(this.state.identity.velocidad / 1000)} segundo/s</p>\n            <p>Puntuación: {this.state.puntuacion}</p>\n            <p>Bien: {this.state.bien}</p>\n            <p>Mal: {this.state.mal}</p>\n            <p>Cantidad de números: {this.state.numerosCant}</p>\n            <div>\n              <p>NÚMEROS</p>\n              <button onClick={this.incrementNumber}>Aumentar</button>\n              <button onClick={this.decrementNumber}>Bajar</button>\n            </div>\n            <div>\n              {this.state.time > 60\n                ?\n                <p>1:{this.state.time - 60}</p>\n                :\n                <p>0:{this.state.time}</p>\n              }\n            </div>\n            <form>\n              <label htmlFor=\"letras\">Letras</label>\n              <input type=\"checkbox\" name=\"letras\" checked={this.state.letras} onChange={this.handleInputChange} />\n              <label htmlFor=\"numeros\">Numeros</label>\n              <input type=\"checkbox\" name=\"numeros\" checked={this.state.numeros} onChange={this.handleInputChange} />\n              <label htmlFor=\"letrasMay\">Letras con mayuscula</label>\n              <input type=\"checkbox\" name=\"letrasMay\" checked={this.state.letrasMay} onChange={this.handleInputChange} />\n            </form>\n\n            <form>\n              <label htmlFor=\"algorithm\">Algoritmo</label>\n              <input type=\"checkbox\" name=\"algorithm\" checked={this.state.algorithm} onChange={this.handleInputChange} />\n            </form>\n\n            {this.state.start &&\n              <form onSubmit={this.signIn}>\n                <input type=\"text\" ref={this.answer} />\n              </form>\n            }\n\n            {this.state.ver &&\n              <p>{this.state.num}</p>\n            }\n            {!this.state.start &&\n              <div>\n                <p>Velocidad</p>\n                <form >\n                  <input type=\"text\" onChange={this.aumentarVelocidad} ref={this.velocidad} placeholder=\"\" />\n                </form>\n                <button onClick={this.start}>Empezar</button>\n              </div>\n            }\n\n\n          </div>\n\n          : <div>\n            <p>Ingrese su nombre</p>\n            <form onSubmit={this.logIn}>\n              <input type=\"text\" ref={this.name} placeholder=\"NOMBRE\" />\n\n              <input type=\"submit\" name=\"submit\" />\n            </form>\n          </div>\n        }\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect, HashRouter } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport Login from './components/login/login.component.jsx';\nimport { createBrowserHistory } from 'history';\n\nconst customHistory = createBrowserHistory();\n\nclass Router extends Component {\n\n    render() {\n        return (\n            <BrowserRouter>\n                <HashRouter basename=\"/\">\n                    <Switch>\n                        <Route history={customHistory} exact path=\"/\" component={Login} />\n                        <Route history={customHistory} exact path=\"/login\" component={Login} />\n                    </Switch>\n                </HashRouter>\n            </BrowserRouter>\n\n        );\n    }\n}\n\nexport default Router;","import React from 'react';\nimport './assets/App.css';\nimport { useSelector, useDispatch } from 'react-redux'\nimport {increment} from './actions';\nimport Router from './Router';\n\nfunction App() {\n  const counter = useSelector(state => state.counter)\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"App\">\n      <Router></Router>\n      {/*\n        <button onClick={() => dispatch(increment())}>+</button>\n      <h1>Counter: {counter}</h1>\n      */\n      }\n      \n    </div>\n  );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const counterReducer = (state = 0, action) => {\n    switch(action.type){\n        case 'INCREMENT':\n            return state + 1\n        case 'DECREMENT':\n            return state - 1\n        default:\n            return state;\n    }\n}\n\nexport default counterReducer;","const loggedReducer = (state = false, action) => {\n    switch( action.type) {\n        case 'SIGN_IN':\n            return !state\n        default:\n            return state\n    }\n};\n\nexport default loggedReducer;","import counterReducer from './counter';\nimport loggedReducer from './isLogged';\nimport {combineReducers} from 'redux';\n\nconst allReducers = combineReducers({\n    counter : counterReducer,\n    isLogged : loggedReducer\n})\n\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, } from 'redux';\nimport allReducer from './reducers';\nimport { Provider } from \"react-redux\"\n\nconst store = createStore(\n  allReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}