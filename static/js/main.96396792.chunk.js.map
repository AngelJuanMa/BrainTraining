{"version":3,"sources":["components/login/login.component.jsx","Router.js","App.js","serviceWorker.js","reducers/counter.js","reducers/isLogged.js","reducers/index.js","index.js"],"names":["Login","props","answer","React","createRef","name","velocidad","incrementNumber","e","cantidadDeNumeros","state","numerosCant","setState","decrementNumber","alert","randomNumber","lista","i","number","Math","ceil","random","push","num","numerosCantActual","ver","start","timeOut","puntuacion","mal","bien","timer","setTimeout","marckRecord","clearTimeout","identity","record","localStorage","setItem","JSON","stringify","signIn","preventDefault","stop","abs","current","value","join","round","clear","aumentarVelocidad","velocidadRef","isNaN","nuevaVelocidad","logIn","user","alias","numeros","palabras","letras","dias","parse","getItem","Fragment","this","onClick","onSubmit","type","ref","placeholder","Component","customHistory","createBrowserHistory","Router","basename","history","exact","path","component","App","useSelector","counter","useDispatch","className","Boolean","window","location","hostname","match","counterReducer","action","loggedReducer","allReducers","combineReducers","isLogged","store","createStore","allReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.96396792.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { NavLink, Redirect } from \"react-router-dom\";\n//import \"./login.style.sass\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    let user = JSON.parse(localStorage.getItem(\"identity\"));\n\n    this.state = {\n      num: null,\n      numerosCant: 2,\n      numerosCantActual: 2,\n      bien: 0,\n      mal: 0,\n      puntuacion: 0,\n      identity: user,\n      ver: true,\n      clear: false,\n      start: false,\n      stop: 0\n    };\n  }\n\n  answer = React.createRef();\n  name = React.createRef();\n  velocidad = React.createRef();\n\n  incrementNumber = (e) => {\n    var cantidadDeNumeros = this.state.numerosCant;\n    this.setState({\n      numerosCant: cantidadDeNumeros + 1\n    })\n  }\n\n  decrementNumber = (e) => {\n    var cantidadDeNumeros = this.state.numerosCant;\n    if (cantidadDeNumeros == 2) return alert('demasiado');\n    this.setState({\n      numerosCant: cantidadDeNumeros - 1\n    })\n  }\n\n  randomNumber = () => {\n    var lista = []\n    for (var i = 0; i < this.state.numerosCant; i++) {\n      var number = Math.ceil(Math.random() * (9 - 0) + 0);\n      lista.push(number);\n    }\n\n    this.setState({\n      num: lista,\n      numerosCantActual: this.state.numerosCant,\n      ver: true\n    });\n\n  }\n\n  start = (e) => {\n    this.randomNumber();\n    this.timeOut();\n    this.setState({\n      puntuacion: 0,\n      mal: 0,\n      bien: 0,\n      start: true\n    })\n  }\n\n  timeOut = (e) => {\n    const timer = setTimeout(() => {\n      this.marckRecord()\n    }, 90000);\n    return () => clearTimeout(timer);\n  }\n\n  marckRecord = (e) => {\n    this.setState({\n      start: false\n    })\n    if (this.state.puntuacion > this.state.identity.record) {\n      this.state.identity.record = this.state.puntuacion;\n      localStorage.setItem('identity', JSON.stringify(this.state.identity))\n    }\n  }\n\n  signIn = (e) => {\n    e.preventDefault();\n\n    var stop = this.state.bien + Math.abs(this.state.mal);\n    this.setState({\n      stop: stop\n    })\n    const timerVal = setTimeout(() => {\n      if (stop === this.state.stop) this.setState({ ver: false })\n    }, this.state.identity.velocidad);\n\n\n    var res = this.answer.current.value\n    if (res == this.state.num.join('')) {\n      var value = (this.state.puntuacion + (this.state.numerosCantActual * 10) / (this.state.identity.velocidad / 1000))\n      value = Math.round(value);\n      this.setState({\n        bien: this.state.bien + 1,\n        puntuacion: value,\n        clear: true\n      });\n    }\n    else this.setState({\n      mal: this.state.mal + 1,\n      clear: true\n    });\n    this.randomNumber();\n  }\n\n  aumentarVelocidad = (e) => {\n    e.preventDefault();\n    var velocidadRef = this.velocidad.current.value\n    if(isNaN(velocidadRef)) return alert('Ingrese solo numeros')\n    if(velocidadRef == 0) return alert('Ingrese un numero mayor a 0')\n    let nuevaVelocidad = ( velocidadRef * 1000);\n    this.state.identity.velocidad = nuevaVelocidad;\n    this.setState({\n      identity: this.state.identity\n    })\n    localStorage.setItem('identity', JSON.stringify(this.state.identity));\n  }\n\n  logIn = (e) => {\n    e.preventDefault();\n    let user = {\n      alias: this.name.current.value,\n      velocidad: 1000,\n      bien: 0,\n      mal: 0,\n      numeros: 0,\n      palabras: 0,\n      letras: 0,\n      dias: 0,\n      record: 0\n    }\n    localStorage.setItem('identity', JSON.stringify(user));\n    this.setState({\n      identity: user\n    })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.identity ?\n          <div>\n            {this.state.identity &&\n              <p>Record: {this.state.identity.record}</p>\n            }\n            <p>Velocidad: {(this.state.identity.velocidad / 1000)} segundo/s</p>\n            <p>Puntuación: {this.state.puntuacion}</p>\n            <p>Bien: {this.state.bien}</p>\n            <p>Mal: {this.state.mal}</p>\n            <p>Cantidad de números: {this.state.numerosCant}</p>\n            <div>\n              <p>NÚMEROS</p>\n              <button onClick={this.incrementNumber}>Aumentar</button>\n              <button onClick={this.decrementNumber}>Bajar</button>\n            </div>\n\n\n\n\n\n            {this.state.start &&\n              <form onSubmit={this.signIn}>\n                <input type=\"number\" ref={this.answer} placeholder=\"\" />\n\n                <input type=\"submit\" name=\"submit\" />\n              </form>\n            }\n\n            {this.state.ver &&\n              <p>{this.state.num}</p>\n            }\n            {!this.state.start &&\n              <div>\n                <p>Velocidad</p>\n                <form onSubmit={this.aumentarVelocidad}>\n                  <input type=\"text\" ref={this.velocidad} placeholder=\"\" />\n\n                  <input type=\"submit\" name=\"submit\" />\n                </form>\n                <button onClick={this.start}>Empezar</button>\n              </div>\n            }\n\n\n          </div>\n\n          : <div>\n            <p>Ingrese su nombre</p>\n            <form onSubmit={this.logIn}>\n              <input type=\"text\" ref={this.name} placeholder=\"NOMBRE\" />\n\n              <input type=\"submit\" name=\"submit\" />\n            </form>\n          </div>\n        }\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect, HashRouter } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport Login from './components/login/login.component.jsx';\nimport { createBrowserHistory } from 'history';\n\nconst customHistory = createBrowserHistory();\n\nclass Router extends Component {\n\n    render() {\n        return (\n            <BrowserRouter>\n                <HashRouter basename=\"/\">\n                    <Switch>\n                        <Route history={customHistory} exact path=\"/\" component={Login} />\n                        <Route history={customHistory} exact path=\"/login\" component={Login} />\n                    </Switch>\n                </HashRouter>\n            </BrowserRouter>\n\n        );\n    }\n}\n\nexport default Router;","import React from 'react';\nimport './assets/App.css';\nimport { useSelector, useDispatch } from 'react-redux'\nimport {increment} from './actions';\nimport Router from './Router';\n\nfunction App() {\n  const counter = useSelector(state => state.counter)\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"App\">\n      <Router></Router>\n      {/*\n        <button onClick={() => dispatch(increment())}>+</button>\n      <h1>Counter: {counter}</h1>\n      */\n      }\n      \n    </div>\n  );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const counterReducer = (state = 0, action) => {\n    switch(action.type){\n        case 'INCREMENT':\n            return state + 1\n        case 'DECREMENT':\n            return state - 1\n        default:\n            return state;\n    }\n}\n\nexport default counterReducer;","const loggedReducer = (state = false, action) => {\n    switch( action.type) {\n        case 'SIGN_IN':\n            return !state\n        default:\n            return state\n    }\n};\n\nexport default loggedReducer;","import counterReducer from './counter';\nimport loggedReducer from './isLogged';\nimport {combineReducers} from 'redux';\n\nconst allReducers = combineReducers({\n    counter : counterReducer,\n    isLogged : loggedReducer\n})\n\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, } from 'redux';\nimport allReducer from './reducers';\nimport { Provider } from \"react-redux\"\n\nconst store = createStore(\n  allReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}